nav {
    border-bottom: 1px solid #80808052;
    background-color: white;
    box-shadow: -3px 2px 5px 0px rgba(0, 0, 0, 0.11);
}

i {
    cursor: pointer;
}

i.btn-menu {
    font-size: 20px;
    margin-right: 10px;
    color: #1a2c44;
}

.navbar-brand {
    color: #1a2c44;
}

.mat-stroked-button:not([disabled]) {
    border-color: rgba(255, 255, 255, 0.12);
}

.no-link {
    cursor: default;
}

.navbar-dark .navbar-nav,
.navbar .navbar-nav {
    .nav-link:hover {
        cursor: default;
    }
    .nav-link.link:hover {
        cursor: pointer;
        color: #007bff;
    }
    a.nav-link {
        text-transform: capitalize;
        font-size: 14px;
    }
}

.user-nav {
    cursor: pointer;
    display: flex;
    img {
        width: auto;
        height: 40px;
        border-radius: 50%;
    }
    .text-section {
        text-align: right;
        margin-right: 5px;
        align-self: flex-end;
        h6 {
            margin-bottom: 0;
            line-height: 3px;
        }
        span {
            font-size: 11px;
        }
    }
}

.nav-link.slash {
    padding-left: 0;
    padding-right: 0;
}

footer {
    position: fixed;
    bottom: 0;
    width: 100%;
    padding: 2px;
    font-size: 10px;
    box-shadow: 1px 1px 1px 1px grey;
    background-color: #fff;
    text-align: right;
    a {
        color: #406a96;
        &:hover {
            cursor: pointer;
            text-decoration: none;
        }
        i {
            margin-right: 3px;
        }
    }
}

#main-home-container {
    padding-bottom: 70px;
}

.content-container {
    margin-bottom: 30px;
    .row {
        margin-top: 65px;
        height: calc(100vh - 88px);
        overflow-y: scroll;
    }
}

nav-list {
    padding-left: 0;
    padding-right: 0;
}

.sticky-nav {
    position: fixed;
    width: 15%;
}

.menu-bar {
    background-color: #354052;
    color: #97a3b6;
    height: 100%;
    width: 85px;
    text-align: center;
    position: fixed;
    top: 0;
    left: 0;
    transition: all 0.8s ease;
    z-index: 100;
}

.v-list {
    margin: 0;
    padding: 0;
    i {
        font-size: 22px;
    }
}

.v-list li {
    cursor: pointer;
}

menu-bar .v-list>li {
    margin-bottom: 0;
}

.v-list>* {
    list-style-type: none;
    line-height: 1;
    margin: 0 0 1px 0;
    display: block;
}

.menu-bar .v-list>li>a {
    color: #97a3b6;
    font-size: 11px;
    padding: 15px 0;
    display: block;
    transition: all 0.8s ease;
}

.menu-bar {
    img {
        margin: auto;
    }
    label {
        margin-top: 8px;
        margin-bottom: 0;
        overflow: hidden;
        text-overflow: ellipsis;
        width: 100%;
    }
}

.img-responsive,
.thumbnail>img,
.thumbnail a>img,
.carousel-inner>.item>img,
.carousel-inner>.item>a>img {
    display: block;
    max-width: 100%;
    height: auto;
}

.menu-bar .v-list>li>a:hover,
.menu-bar .v-list>li>a:focus,
.menu-bar .v-list>li>a.active {
    text-decoration: none;
    background-color: #1d283b;
    transition: all 0.8s ease;
}

.menu-bar.animated {
    animation-duration: 0.3s;
    animation-delay: 0.1s;
    animation-iteration-count: 1;
}

.fixed-top {
    transition: 0.3s margin ease;
    transition-delay: 0.1s;
}

.bottom-item {
    bottom: 0;
    position: fixed;
    width: 100%;
    i {
        width: 100%;
        font-size: 20px;
        margin-bottom: 8px;
    }
}


/* ---------------------------- Left nav handling --------------------------- */

.has-expanded-side-nav {
    .menu-bar {
        width: 6.5%;
        float: left;
    }
    .main-content-wrapper {
        margin-bottom: 17px;
        margin-left: 7.5%;
        nav {
            margin-left: 6.5%;
        }
    }
}

.has-collapsed-side-nav {
    .menu-bar {
        width: 3%;
        float: left;
    }
    .main-content-wrapper {
        margin-left: 4%;
        nav {
            margin-left: 3%;
        }
    }
}


/* ----------------------------------- -- ----------------------------------- */

// On a fast network connection, the lazy-loaded modules will load almost instantly. In
// such a case, we don't want to bother showing the asynchronous loading indicator as it
// will simply flash the UI and create a distracting user experience. As such, we want to
// put a small delay on the "observability" of the loading indicator. This way, on a fast
// connection, it will be removed before the delay is consumed; and, on a slower network
// connection, it will be shown to the user soon after the asynchronous load starts.
// --
// CAUTION: keyframes are not "protected" by Angular's simulated encapsulation. As such,
// this animation name needs to be universally unique to the application.
@keyframes router-load-indicator-animation {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.router-load-indicator {
    // Delay the animation for a fast network connection (so users don't see the loader).
    animation-delay: 100ms;
    animation-duration: 200ms;
    animation-fill-mode: both;
    animation-name: router-load-indicator-animation;
    // --
    background-color: #ffdc73;
    border-radius: 5px 5px 5px 5px;
    box-shadow: 0px 2px 2px fade(#000000, 20%);
    color: #000000;
    font-family: monospace;
    font-size: 16px;
    left: 50%;
    padding: 7px 15px 7px 15px;
    position: fixed;
    text-transform: lowercase;
    top: 10px;
    transform: translateX(-50%);
    z-index: 1050;
    cursor: pointer;
}

///////////////////////////////////////////////////////////////
.release-notes {
    a {
        background-color: #1d283b;
        color: white;
        padding-left: 2px;
        padding-right: 2px;
    }
}